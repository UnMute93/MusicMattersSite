@using Microsoft.AspNet.Identity;
@model MusicMattersSite.Models.ProfileViewModel
@Scripts.Render("~/Scripts/Own/profileFunctions.js")

@{
    ViewBag.Title = "Profiles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="ProfileContainer">
    <div id="UserInfo">
        @Model.UserName<br />
        @if (Model.ShowEmail == 1)
        {
            @Model.Email
        }
        @if (User.Identity.GetUserId() == Model.UserID)
        {
            @Html.ActionLink("Profile Settings", "EditProfileSettings", new { userID = Model.UserID });
        }

    </div>

    <div id="ProfileContent">
        <div id="Bio">
            @Model.Bio
        </div>

        <div id="ArtistList">
            <h3>My favorite artists are:</h3>
            @foreach (var item in Model.Artists)
            {
                if (item.Ranking != 0)
                {
                    @Html.Raw(item.Ranking + ". ")
                }
                @Html.ActionLink(item.ArtistName, "ArtistDetails", new { artistID = item.ArtistID })
                <br />
            }
        </div>
    </div>
</div>

@if (Request.IsAuthenticated)
{
    <div id="CommentField">
        @using (@Html.BeginForm("AddComment", "Home", new { ParentID = 0 }, FormMethod.Post))
        {
            @Html.TextAreaFor(m => m.Comment.Content)
            @Html.HiddenFor(m => m.UserName)
            @Html.HiddenFor(m => m.UserID)
            <input type="submit" value="Add comment" />
        }
    </div>
    <hr />
}

<div>
    @for (int i=0; i < Model.Comments.Count(); i++)
    {
        <div class="Comment" data-value="@Model.Comments[i].SortKey">
            <div class="ReportCommentField" style="display:none">
                @using (Html.BeginForm("ReportComment", "Home", new { CommentIndex = i }, FormMethod.Post))
                {
                    for (int j=0; j < Model.Flags.Count(); j++)
                    {
                        @Html.RadioButtonFor(m => m.Flag.FlagID, Model.Flags[j].FlagID)
                        @Model.Flags[j].Name<br />
                    }
                    @Html.HiddenFor(m => m.UserName);
                    for (int j = 0; j < Model.Comments.Count(); j++)
                    {
                        @Html.HiddenFor(m => m.Comments[j].CommentID)
                    }
                    <input type="submit" value="Send report" />
                }
            </div>
            <strong>@Model.Comments[i].AuthorName</strong>
            @Model.Comments[i].TimeCreated.ToString()
            @if (Model.Comments[i].TimeEdited != null) { <i>*Edited @Model.Comments[i].TimeEdited.ToString()</i> }
            <button class="ReplyCommentButton">Reply</button>
            @if (User.Identity.GetUserId() == Model.Comments[i].AuthorID)
            {
                <button class="EditCommentButton">Edit</button>
                using (Html.BeginForm("DeleteComment", "Home", new { CommentIndex = i }, FormMethod.Post, new { style = "display:inline" }))
                {
                        @Html.HiddenFor(m => m.UserName)
                        for (int j=0; j < Model.Comments.Count(); j++)
                        {
                        @Html.HiddenFor(m => m.Comments[j].CommentID)
                        @Html.HiddenFor(m => m.Comments[j].Content)
                        @Html.HiddenFor(m => m.Comments[j].AuthorID)
                    }
                    <input type="submit" value="Delete" />
                }
            }
            else
            {
                <button class="ReportCommentButton">Report</button>
            }
            <p>@Model.Comments[i].Content</p>
            @if (User.Identity.GetUserId() == Model.Comments[i].AuthorID)
            {
                <div class="EditCommentField" style="display:none">
                    @using (Html.BeginForm("EditComment", "Home", new { CommentIndex = i }, FormMethod.Post))
                    {
                        @Html.EditorFor(m => m.Comments[i].Content)<br />
                        @Html.HiddenFor(m => m.UserName);
                        for (int j = 0; j < Model.Comments.Count(); j++)
                        {
                            @Html.HiddenFor(m => m.Comments[j].CommentID)
                            @Html.HiddenFor(m => m.Comments[j].Content)
                            @Html.HiddenFor(m => m.Comments[j].AuthorID)
                        }
                        <input type="submit" />
                    }
                </div>
            }
            <div class="ReplyCommentField" style="display:none">
                @using (Html.BeginForm("AddComment", "Home", new { ParentID = Model.Comments[i].CommentID }, FormMethod.Post))
                {
                    @Html.TextAreaFor(m => m.Comment.Content)
                    @Html.HiddenFor(m => m.UserName)
                    @Html.HiddenFor(m => m.UserID)
                    <input type="submit" value="Add comment" />
                }
            </div>
        </div>
    }
</div>

